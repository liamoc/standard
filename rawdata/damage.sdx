{
	data: {
		physical: function(action, source, targets) {
			var damages = [];
			for (var i = 0; i < targets.length; i++)
			{
				var base = source.getStat("attack") - targets[i].getStat("defense");
				var bonus = Random(source.getStat("strength"), ((source.stats.level + source.getStat("strength")) / 8)) + source.getStat("strength");
				damages.push(base * bonus);
			}
			return damages;
		},
		throw_item: function(action, source, targets, item) {
			var damages = [];
			for (var i = 0; i < targets.length; i++)
			{
				var base = item.stats.attack * 4 - targets[i].getStat("defense");
				var bonus = Random(item.stats.attack, (item.stats.attack + 50) / 8) + item.stats.attack;
				damages.push(base * bonus);
			}
			return damages;
		}
	},
	
	compilePath: "damage.sdx"
}